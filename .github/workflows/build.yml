name: Build & test

on:
  push:
    branches:
      - main
      - release-0.1.x
    paths-ignore:
      - '**.md'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    # Skip build if head commit contains 'skip ci'
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch expanded history, which is needed for affected module detection
          fetch-depth: '500'
          lfs: 'true'

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build (Debug)
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --stacktrace \
                assembleDebug

      - name: Metalava compatibility check
        with:
          arguments: --stacktrace \
              metalavaCheckCompatibility metalavaCheckCompatibilityRelease

      - name: Code analysis
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --stacktrace \
              spotlessCheck \
              lintDebug

      - name: Unit Tests
        run: |
          ./scripts/run-unit-tests.sh \
              --run-affected \
              --affected-base-ref=$BASE_REF

      - name: Upload test results and reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-results
          path: |
            **/build/test-results/*
            **/build/reports/*
            **/build/reports/affectedModuleDetector/*

  paparazzi:
    # Skip build if head commit contains 'skip ci'
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: 'true'

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Check GIT lfs images
        run: |
          ./scripts/git-lfs-check.sh

      - name: Snapshot tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --stacktrace \
            verifyPaparazziDebug

      - name: Upload snapshot tests results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: snapshot-test-results
          path: |
            **/build/test-results/*
            **/build/reports/*
            **/build/reports/paparazzi/*
            **/out/failures/