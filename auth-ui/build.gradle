/*
 * Copyright 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'org.jetbrains.dokka'
    id 'dev.chrisbanes.paparazzi'
}

android {
    compileSdkVersion 33

    defaultConfig {
        minSdk 26
        targetSdk 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        buildConfig false
        compose true
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
        freeCompilerArgs += "-opt-in=com.google.android.horologist.auth.data.ExperimentalHorologistAuthDataApi"
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }

    packagingOptions {
        resources {
            excludes += [
                '/META-INF/AL2.0',
                '/META-INF/LGPL2.1'
            ]
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        animationsDisabled true
    }

    lint {
        checkReleaseBuilds false
        textReport true
        disable 'MissingTranslation', 'ExtraTranslation'
    }

    namespace 'com.google.android.horologist.auth.ui'
}

project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile.class).configureEach { task ->
    // Workaround for https://youtrack.jetbrains.com/issue/KT-37652
    if (!task.name.endsWith("TestKotlin") && !task.name.startsWith("compileDebug")) {
        task.kotlinOptions.freeCompilerArgs.add("-Xexplicit-api=strict")
    }
}

apply plugin: 'me.tylerbwong.gradle.metalava'

metalava {
    sourcePaths = ["src/main"]
    filename = "api/current.api"
    reportLintsAsErrors = true
}

dependencies {

    implementation projects.authData

    implementation libs.kotlin.stdlib
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.androidx.wear
    implementation libs.androidx.wear.phone.interactions

    debugImplementation projects.composeTools
    debugImplementation libs.compose.ui.toolingpreview

    testImplementation libs.junit
    testImplementation libs.androidx.test.ext.ktx
    testImplementation libs.kotlinx.coroutines.test
    testImplementation libs.truth
    testImplementation libs.robolectric
    testImplementation projects.paparazzi
    testImplementation libs.paparazzi

    androidTestImplementation libs.compose.ui.test.junit4
    androidTestImplementation libs.truth
    androidTestImplementation libs.espresso.core
    androidTestImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext
    androidTestImplementation libs.androidx.test.ext.ktx
}

// Not publishing it until it's ready
//apply plugin: "com.vanniktech.maven.publish"