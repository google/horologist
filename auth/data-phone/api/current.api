// Signature format: 4.0
package com.google.android.horologist.auth.data.phone.tokenshare {

  public interface TokenBundleRepository<T> {
    method public suspend Object? isAvailable(kotlin.coroutines.Continuation<? super java.lang.Boolean>);
    method public suspend Object? update(T tokenBundle, kotlin.coroutines.Continuation<? super kotlin.Unit>);
  }

}

package com.google.android.horologist.auth.data.phone.tokenshare.impl {

  public final class TokenBundleRepositoryImpl<T> implements com.google.android.horologist.auth.data.phone.tokenshare.TokenBundleRepository<T> {
    ctor public TokenBundleRepositoryImpl(com.google.android.horologist.data.WearDataLayerRegistry registry, optional String key, kotlinx.coroutines.CoroutineScope coroutineScope, androidx.datastore.core.Serializer<T> serializer);
    method public suspend Object? isAvailable(kotlin.coroutines.Continuation<? super java.lang.Boolean>);
    method public suspend Object? update(T tokenBundle, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    field public static final com.google.android.horologist.auth.data.phone.tokenshare.impl.TokenBundleRepositoryImpl.Companion Companion;
  }

  public static final class TokenBundleRepositoryImpl.Companion {
  }

}

