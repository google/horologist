// Signature format: 4.0
package com.google.android.horologist.auth.data.common.model {

  public final class AuthUser {
    ctor public AuthUser(optional String? displayName, optional String? email, optional String? avatarUri);
    method public String? component1();
    method public String? component2();
    method public String? component3();
    method public com.google.android.horologist.auth.data.common.model.AuthUser copy(String? displayName, String? email, String? avatarUri);
    method public String? getAvatarUri();
    method public String? getDisplayName();
    method public String? getEmail();
    property public final String? avatarUri;
    property public final String? displayName;
    property public final String? email;
  }

}

package com.google.android.horologist.auth.data.common.repository {

  public interface AuthUserRepository {
    method public suspend Object? getAuthenticated(kotlin.coroutines.Continuation<? super com.google.android.horologist.auth.data.common.model.AuthUser>);
    method public default suspend Object? getAvailable(kotlin.coroutines.Continuation<? super java.util.List<? extends com.google.android.horologist.auth.data.common.model.AuthUser>>);
  }

}

package com.google.android.horologist.auth.data.googlesignin {

  public final class AuthUserMapper {
    method public com.google.android.horologist.auth.data.common.model.AuthUser? map(com.google.android.gms.auth.api.signin.GoogleSignInAccount? googleSignInAccount);
    field public static final com.google.android.horologist.auth.data.googlesignin.AuthUserMapper INSTANCE;
  }

  public final class GoogleSignInAuthUserRepository implements com.google.android.horologist.auth.data.common.repository.AuthUserRepository {
    ctor public GoogleSignInAuthUserRepository(android.content.Context applicationContext);
    method public suspend Object? getAuthenticated(kotlin.coroutines.Continuation<? super com.google.android.horologist.auth.data.common.model.AuthUser>);
  }

  public interface GoogleSignInEventListener {
    method public suspend Object? onSignedIn(com.google.android.gms.auth.api.signin.GoogleSignInAccount account, kotlin.coroutines.Continuation<? super kotlin.Unit>);
  }

  public final class GoogleSignInEventListenerNoOpImpl implements com.google.android.horologist.auth.data.googlesignin.GoogleSignInEventListener {
    method public suspend Object? onSignedIn(com.google.android.gms.auth.api.signin.GoogleSignInAccount account, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    field public static final com.google.android.horologist.auth.data.googlesignin.GoogleSignInEventListenerNoOpImpl INSTANCE;
  }

}

package com.google.android.horologist.auth.data.tokenshare {

  public interface TokenBundleRepository<T> {
    method public kotlinx.coroutines.flow.Flow<T> getFlow();
    property public abstract kotlinx.coroutines.flow.Flow<T> flow;
  }

}

package com.google.android.horologist.auth.data.tokenshare.impl {

  public final class TokenBundleRepositoryImpl<T> implements com.google.android.horologist.auth.data.tokenshare.TokenBundleRepository<T> {
    ctor public TokenBundleRepositoryImpl(com.google.android.horologist.data.WearDataLayerRegistry registry, androidx.datastore.core.Serializer<T> serializer, String path);
    method public kotlinx.coroutines.flow.Flow<T> getFlow();
    property public kotlinx.coroutines.flow.Flow<T> flow;
    field public static final com.google.android.horologist.auth.data.tokenshare.impl.TokenBundleRepositoryImpl.Companion Companion;
  }

  public static final class TokenBundleRepositoryImpl.Companion {
    method public <T> com.google.android.horologist.auth.data.tokenshare.impl.TokenBundleRepositoryImpl<T> create(com.google.android.horologist.data.WearDataLayerRegistry registry, androidx.datastore.core.Serializer<T> serializer, optional String key);
  }

}

