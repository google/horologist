// Signature format: 4.0
package com.google.android.horologist.base.ui.components {

  public final class StandardButtonKt {
    method @androidx.compose.runtime.Composable public static void StandardButton(androidx.compose.ui.graphics.vector.ImageVector imageVector, String contentDescription, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional com.google.android.horologist.base.ui.components.StandardButtonType buttonType, optional com.google.android.horologist.base.ui.components.StandardButtonSize buttonSize, optional boolean enabled);
  }

  public enum StandardButtonSize {
    method public final float getIconSize();
    method public final float getTapTargetSize();
    property public final float iconSize;
    property public final float tapTargetSize;
    enum_constant public static final com.google.android.horologist.base.ui.components.StandardButtonSize Default;
    enum_constant public static final com.google.android.horologist.base.ui.components.StandardButtonSize ExtraSmall;
    enum_constant public static final com.google.android.horologist.base.ui.components.StandardButtonSize Large;
    enum_constant public static final com.google.android.horologist.base.ui.components.StandardButtonSize Small;
  }

  public enum StandardButtonType {
    enum_constant public static final com.google.android.horologist.base.ui.components.StandardButtonType IconOnly;
    enum_constant public static final com.google.android.horologist.base.ui.components.StandardButtonType Primary;
    enum_constant public static final com.google.android.horologist.base.ui.components.StandardButtonType Secondary;
  }

  public final class StandardChipIconWithProgressKt {
    method @androidx.compose.runtime.Composable public static void StandardChipIconWithProgress(optional androidx.compose.ui.Modifier modifier, optional Object? icon, optional boolean largeIcon, optional androidx.compose.ui.graphics.painter.Painter? placeholder, optional long progressIndicatorColor, optional long progressTrackColor);
    method @androidx.compose.runtime.Composable public static void StandardChipIconWithProgress(float progress, optional androidx.compose.ui.Modifier modifier, optional Object? icon, optional boolean largeIcon, optional androidx.compose.ui.graphics.painter.Painter? placeholder, optional long progressIndicatorColor, optional long progressTrackColor);
  }

  public final class StandardChipKt {
    method @androidx.compose.runtime.Composable public static void StandardChip(String label, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional String? secondaryLabel, optional Object? icon, optional boolean largeIcon, optional androidx.compose.ui.graphics.painter.Painter? placeholder, optional com.google.android.horologist.base.ui.components.StandardChipType chipType, optional boolean enabled);
    method @androidx.compose.runtime.Composable public static void StandardChip(String label, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional String? secondaryLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional boolean largeIcon, optional com.google.android.horologist.base.ui.components.StandardChipType chipType, optional boolean enabled);
    method @androidx.compose.runtime.Composable public static void StandardChip(@StringRes int labelId, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional String? secondaryLabel, optional Object? icon, optional boolean largeIcon, optional androidx.compose.ui.graphics.painter.Painter? placeholder, optional com.google.android.horologist.base.ui.components.StandardChipType chipType, optional boolean enabled);
  }

  public enum StandardChipType {
    enum_constant public static final com.google.android.horologist.base.ui.components.StandardChipType Primary;
    enum_constant public static final com.google.android.horologist.base.ui.components.StandardChipType Secondary;
  }

  public final class TitleKt {
    method @androidx.compose.runtime.Composable public static void Title(@StringRes int textId, optional androidx.compose.ui.Modifier modifier);
    method @androidx.compose.runtime.Composable public static void Title(String text, optional androidx.compose.ui.Modifier modifier);
  }

}

package com.google.android.horologist.base.ui.util {

  public final class A11yKt {
    method public static String? getDECORATIVE_ELEMENT_CONTENT_DESCRIPTION();
    property public static final String? DECORATIVE_ELEMENT_CONTENT_DESCRIPTION;
  }

  public final class RememberVectorPainterKt {
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.graphics.vector.VectorPainter rememberVectorPainter(androidx.compose.ui.graphics.vector.ImageVector image, long tintColor, optional int tintBlendMode);
  }

}

