/*
 * Copyright 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'org.jetbrains.dokka'
    id 'app.cash.paparazzi'
}

android {
    compileSdkVersion 32

    defaultConfig {
        minSdk 26
        targetSdk 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        buildConfig false
        compose true
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }
    packagingOptions {
        resources {
            excludes += [
                '/META-INF/AL2.0',
                '/META-INF/LGPL2.1'
            ]
        }
    }


    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        animationsDisabled true
    }
    lint {
        checkReleaseBuilds false
        textReport true
    }
    lintOptions{
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
    }
    namespace 'com.google.android.horologist.composables'
}

project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile.class).configureEach { task ->
    // Workaround for https://youtrack.jetbrains.com/issue/KT-37652
    if (!task.name.endsWith("TestKotlin") && !task.name.startsWith("compileDebug")) {
        task.kotlinOptions.freeCompilerArgs.add("-Xexplicit-api=strict")
    }
}

apply plugin: 'me.tylerbwong.gradle.metalava'

metalava {
    sourcePaths = ["src/main"]
    filename = "api/current.api"
    reportLintsAsErrors = true
}

dependencies {
    implementation projects.composeLayout
    implementation libs.kotlin.stdlib
    implementation libs.androidx.wear
    implementation libs.wearcompose.material
    implementation libs.wearcompose.foundation
    implementation libs.compose.ui.tooling
    implementation libs.compose.material.iconscore
    implementation libs.compose.material.iconsext
    implementation libs.androidx.corektx

    debugImplementation libs.compose.ui.test.manifest
    debugImplementation libs.compose.ui.toolingpreview
    debugImplementation projects.composeTools

    testImplementation libs.junit
    testImplementation projects.composeTools
    testImplementation projects.paparazzi

    androidTestImplementation libs.compose.ui.test.junit4
    androidTestImplementation libs.truth
}

apply plugin: "com.vanniktech.maven.publish"
