#
# Copyright 2022 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Turn on parallel compilation, caching and on-demand configuration
org.gradle.configureondemand=false
org.gradle.caching=true
org.gradle.parallel=true

# https://github.com/google/horologist/issues/2406
# org.gradle.configuration-cache=true
# org.gradle.configuration-cache.problems=warn

# Declare we support AndroidX
android.useAndroidX=true

# For more information about how Gradle memory options were chosen:
# - Metaspace See https://www.jasonpearson.dev/metaspace-in-jvm-builds/
# - SoftRefLRUPolicyMSPerMB would default to 1000 which with a 4gb heap translates to ~51 minutes.
#   A value of 1 means ~4 seconds before SoftRefs can be collected, which means its realistic to
#   collect them as needed during a build that should take seconds to minutes.
# - CodeCache normally defaults to a very small size. Increasing it from platform defaults of 32-48m
#   because of how many classes can be loaded into memory and then cached as native compiled code
#   for a small speed boost.
org.gradle.jvmargs=-Dfile.encoding=UTF-8 -XX:+UseG1GC -XX:SoftRefLRUPolicyMSPerMB=1 -XX:ReservedCodeCacheSize=256m -XX:+HeapDumpOnOutOfMemoryError -Xmx4g -Xms4g

# For more information about how Kotlin Daemon memory options were chosen:
# - Kotlin JVM args only inherit Xmx, ReservedCodeCache, and MaxMetaspace. Since we are specifying
#   other args we need to specify all of them here.
# - We're using the Kotlin Gradle Plugin's default value for ReservedCodeCacheSize, if we do not then
#   the Gradle JVM arg value for ReservedCodeCacheSize will be used.
kotlin.daemon.jvmargs=-Dfile.encoding=UTF-8 -XX:+UseG1GC -XX:SoftRefLRUPolicyMSPerMB=1 -XX:ReservedCodeCacheSize=320m -XX:+HeapDumpOnOutOfMemoryError -Xmx4g -Xms4g

# Increase timeout when pushing to Sonatype (otherwise we get timeouts)
systemProp.org.gradle.internal.http.socketTimeout=120000

GROUP=com.google.android.horologist
VERSION_NAME=0.7.3-alpha

POM_DESCRIPTION=Utilities for Wear OS

POM_URL=https://github.com/google/horologist/
POM_SCM_URL=https://github.com/google/horologist/
POM_SCM_CONNECTION=scm:git:git://github.com/google/horologist.git
POM_SCM_DEV_CONNECTION=scm:git:git://github.com/google/horologist.git

POM_LICENCE_NAME=The Apache Software License, Version 2.0
POM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt
POM_LICENCE_DIST=repo

POM_DEVELOPER_ID=google
POM_DEVELOPER_NAME=Google

RELEASE_SIGNING_ENABLED=true

# Plugin should be applied individually to modules that are reviewed, in order to avoid having
# unnecessary performance hit in CI. Once all modules are reviewed, this line can be removed, and
# the "apply" in each module should also be removed.
dependency.analysis.autoapply=false

# Uncomment to enable record mode
#roborazzi.test.verify=true
#roborazzi.test.record=true

# enable in CI
strict.build=false

# media3 checkout
media3Checkout=
