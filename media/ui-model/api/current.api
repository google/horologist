// Signature format: 4.0
package com.google.android.horologist.media.ui.animation {

  public final class PlaybackProgressAnimation {
    method public androidx.compose.animation.core.SpringSpec<java.lang.Float> getPLAYBACK_PROGRESS_ANIMATION_SPEC();
    property public final androidx.compose.animation.core.SpringSpec<java.lang.Float> PLAYBACK_PROGRESS_ANIMATION_SPEC;
    field public static final com.google.android.horologist.media.ui.animation.PlaybackProgressAnimation INSTANCE;
  }

}

package com.google.android.horologist.media.ui.components.controls {

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public abstract sealed class SeekButtonIncrement {
    field public static final com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement.Companion Companion;
  }

  public static final class SeekButtonIncrement.Companion {
    method public com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement getFive();
    method public com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement getTen();
    method public com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement getThirty();
    method public com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement ofDuration(long duration);
    property public final com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement Five;
    property public final com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement Ten;
    property public final com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement Thirty;
  }

  public static final class SeekButtonIncrement.Known extends com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement {
    ctor public SeekButtonIncrement.Known(int seconds);
    method public int component1();
    method public com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement.Known copy(int seconds);
    method public int getSeconds();
    property public final int seconds;
  }

  public static final class SeekButtonIncrement.Unknown extends com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement {
    field public static final com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement.Unknown INSTANCE;
  }

}

package com.google.android.horologist.media.ui.state {

  public final class LocalTimestampProviderKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<com.google.android.horologist.media.model.TimestampProvider> getLocalTimestampProvider();
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<com.google.android.horologist.media.model.TimestampProvider> LocalTimestampProvider;
  }

  @androidx.compose.runtime.Stable public final class PlayerUiController {
    ctor public PlayerUiController(com.google.android.horologist.media.repository.PlayerRepository playerRepository);
    method public com.google.android.horologist.media.ui.state.PlayerUiController copy(com.google.android.horologist.media.repository.PlayerRepository playerRepository);
    method public void pause();
    method public void play();
    method public void seekBack();
    method public void seekForward();
    method public void setPlaybackSpeed(float speed);
    method public void skipToNextMedia();
    method public void skipToPreviousMedia();
  }

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public final class PlayerUiState {
    ctor public PlayerUiState(boolean playEnabled, boolean pauseEnabled, boolean seekBackEnabled, boolean seekForwardEnabled, boolean seekInCurrentMediaItemEnabled, boolean seekToPreviousEnabled, boolean seekToNextEnabled, boolean shuffleEnabled, boolean shuffleOn, boolean playPauseEnabled, boolean playing, com.google.android.horologist.media.ui.state.model.MediaUiModel? media, com.google.android.horologist.media.ui.state.model.TrackPositionUiModel trackPositionUiModel, optional com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement seekBackButtonIncrement, optional com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement seekForwardButtonIncrement, boolean connected);
    method public boolean component1();
    method public boolean component10();
    method public boolean component11();
    method public com.google.android.horologist.media.ui.state.model.MediaUiModel? component12();
    method public com.google.android.horologist.media.ui.state.model.TrackPositionUiModel component13();
    method public com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement component14();
    method public com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement component15();
    method public boolean component16();
    method public boolean component2();
    method public boolean component3();
    method public boolean component4();
    method public boolean component5();
    method public boolean component6();
    method public boolean component7();
    method public boolean component8();
    method public boolean component9();
    method public com.google.android.horologist.media.ui.state.PlayerUiState copy(boolean playEnabled, boolean pauseEnabled, boolean seekBackEnabled, boolean seekForwardEnabled, boolean seekInCurrentMediaItemEnabled, boolean seekToPreviousEnabled, boolean seekToNextEnabled, boolean shuffleEnabled, boolean shuffleOn, boolean playPauseEnabled, boolean playing, com.google.android.horologist.media.ui.state.model.MediaUiModel? media, com.google.android.horologist.media.ui.state.model.TrackPositionUiModel trackPositionUiModel, com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement seekBackButtonIncrement, com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement seekForwardButtonIncrement, boolean connected);
    method public boolean getConnected();
    method public com.google.android.horologist.media.ui.state.model.MediaUiModel? getMedia();
    method public boolean getPauseEnabled();
    method public boolean getPlayEnabled();
    method public boolean getPlayPauseEnabled();
    method public boolean getPlaying();
    method public com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement getSeekBackButtonIncrement();
    method public boolean getSeekBackEnabled();
    method public com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement getSeekForwardButtonIncrement();
    method public boolean getSeekForwardEnabled();
    method public boolean getSeekInCurrentMediaItemEnabled();
    method public boolean getSeekToNextEnabled();
    method public boolean getSeekToPreviousEnabled();
    method public boolean getShuffleEnabled();
    method public boolean getShuffleOn();
    method public com.google.android.horologist.media.ui.state.model.TrackPositionUiModel getTrackPositionUiModel();
    property public final boolean connected;
    property public final com.google.android.horologist.media.ui.state.model.MediaUiModel? media;
    property public final boolean pauseEnabled;
    property public final boolean playEnabled;
    property public final boolean playPauseEnabled;
    property public final boolean playing;
    property public final com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement seekBackButtonIncrement;
    property public final boolean seekBackEnabled;
    property public final com.google.android.horologist.media.ui.components.controls.SeekButtonIncrement seekForwardButtonIncrement;
    property public final boolean seekForwardEnabled;
    property public final boolean seekInCurrentMediaItemEnabled;
    property public final boolean seekToNextEnabled;
    property public final boolean seekToPreviousEnabled;
    property public final boolean shuffleEnabled;
    property public final boolean shuffleOn;
    property public final com.google.android.horologist.media.ui.state.model.TrackPositionUiModel trackPositionUiModel;
    field public static final com.google.android.horologist.media.ui.state.PlayerUiState.Companion Companion;
  }

  public static final class PlayerUiState.Companion {
    method public com.google.android.horologist.media.ui.state.PlayerUiState getNotConnected();
    property public final com.google.android.horologist.media.ui.state.PlayerUiState NotConnected;
  }

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public final class PlayerUiStateProducer {
    ctor public PlayerUiStateProducer(com.google.android.horologist.media.repository.PlayerRepository playerRepository);
    method public kotlinx.coroutines.flow.Flow<com.google.android.horologist.media.ui.state.PlayerUiState> getPlayerUiStateFlow();
    property public final kotlinx.coroutines.flow.Flow<com.google.android.horologist.media.ui.state.PlayerUiState> playerUiStateFlow;
  }

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public class PlayerViewModel extends androidx.lifecycle.ViewModel {
    ctor public PlayerViewModel(com.google.android.horologist.media.repository.PlayerRepository playerRepository);
    method public final com.google.android.horologist.media.ui.state.PlayerUiController getPlayerUiController();
    method public final kotlinx.coroutines.flow.StateFlow<com.google.android.horologist.media.ui.state.PlayerUiState> getPlayerUiState();
    property public final com.google.android.horologist.media.ui.state.PlayerUiController playerUiController;
    property public final kotlinx.coroutines.flow.StateFlow<com.google.android.horologist.media.ui.state.PlayerUiState> playerUiState;
  }

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public final class ProgressStateHolder {
    ctor public ProgressStateHolder(float initial, com.google.android.horologist.media.model.TimestampProvider timestampProvider);
    field public static final com.google.android.horologist.media.ui.state.ProgressStateHolder.Companion Companion;
  }

  public static final class ProgressStateHolder.Companion {
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<java.lang.Float> fromTrackPositionUiModel(com.google.android.horologist.media.ui.state.model.TrackPositionUiModel trackPositionUiModel);
  }

}

package com.google.android.horologist.media.ui.state.mapper {

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public final class DownloadMediaUiModelMapper {
    method public com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel map(com.google.android.horologist.media.model.MediaDownload mediaDownload);
    field public static final com.google.android.horologist.media.ui.state.mapper.DownloadMediaUiModelMapper INSTANCE;
  }

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public final class MediaUiModelMapper {
    method public com.google.android.horologist.media.ui.state.model.MediaUiModel.Ready map(com.google.android.horologist.media.model.Media media, optional String defaultTitle, optional String defaultArtist);
    field public static final com.google.android.horologist.media.ui.state.mapper.MediaUiModelMapper INSTANCE;
  }

  public final class PlayerUiStateMapper {
    method public com.google.android.horologist.media.ui.state.PlayerUiState map(com.google.android.horologist.media.model.PlayerState currentState, java.util.Set<? extends com.google.android.horologist.media.model.Command> availableCommands, com.google.android.horologist.media.model.Media? media, com.google.android.horologist.media.model.PlaybackStateEvent playbackStateEvent, boolean shuffleModeEnabled, boolean connected, kotlin.time.Duration? seekBackIncrement, kotlin.time.Duration? seekForwardIncrement);
    field public static final com.google.android.horologist.media.ui.state.mapper.PlayerUiStateMapper INSTANCE;
  }

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public final class PlaylistDownloadUiModelMapper {
    method public com.google.android.horologist.media.ui.state.model.PlaylistDownloadUiModel.Completed map(com.google.android.horologist.media.model.Playlist playlist);
    field public static final com.google.android.horologist.media.ui.state.mapper.PlaylistDownloadUiModelMapper INSTANCE;
  }

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public final class PlaylistUiModelMapper {
    method public com.google.android.horologist.media.ui.state.model.PlaylistUiModel map(com.google.android.horologist.media.model.Playlist playlist);
    field public static final com.google.android.horologist.media.ui.state.mapper.PlaylistUiModelMapper INSTANCE;
  }

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public final class TrackPositionUiModelMapper {
    method public com.google.android.horologist.media.ui.state.model.TrackPositionUiModel map(com.google.android.horologist.media.model.PlaybackStateEvent event);
    field public static final com.google.android.horologist.media.ui.state.mapper.TrackPositionUiModelMapper INSTANCE;
  }

}

package com.google.android.horologist.media.ui.state.model {

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public abstract sealed class DownloadMediaUiModel {
    method public String? getArtworkUri();
    method public String getId();
    method public String? getTitle();
    property public String? artworkUri;
    property public String id;
    property public String? title;
  }

  public static final class DownloadMediaUiModel.Downloaded extends com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel {
    ctor public DownloadMediaUiModel.Downloaded(String id, optional String? title, optional String? artist, optional String? artworkUri);
    method public String component1();
    method public String? component2();
    method public String? component3();
    method public String? component4();
    method public com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Downloaded copy(String id, String? title, String? artist, String? artworkUri);
    method public String? getArtist();
    property public final String? artist;
    property public String? artworkUri;
    property public String id;
    property public String? title;
  }

  public static final class DownloadMediaUiModel.Downloading extends com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel {
    ctor public DownloadMediaUiModel.Downloading(String id, optional String? title, com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Progress progress, com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Size size, optional String? artworkUri);
    method public String component1();
    method public String? component2();
    method public com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Progress component3();
    method public com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Size component4();
    method public String? component5();
    method public com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Downloading copy(String id, String? title, com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Progress progress, com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Size size, String? artworkUri);
    method public com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Progress getProgress();
    method public com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Size getSize();
    property public String? artworkUri;
    property public String id;
    property public final com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Progress progress;
    property public final com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Size size;
    property public String? title;
  }

  public static final class DownloadMediaUiModel.NotDownloaded extends com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel {
    ctor public DownloadMediaUiModel.NotDownloaded(String id, optional String? title, optional String? artist, optional String? artworkUri);
    method public String component1();
    method public String? component2();
    method public String? component3();
    method public String? component4();
    method public com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.NotDownloaded copy(String id, String? title, String? artist, String? artworkUri);
    method public String? getArtist();
    property public final String? artist;
    property public String? artworkUri;
    property public String id;
    property public String? title;
  }

  public abstract static sealed class DownloadMediaUiModel.Progress {
  }

  public static final class DownloadMediaUiModel.Progress.InProgress extends com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Progress {
    ctor public DownloadMediaUiModel.Progress.InProgress(float progress);
    method public float component1();
    method public com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Progress.InProgress copy(float progress);
    method public float getProgress();
    property public final float progress;
  }

  public static final class DownloadMediaUiModel.Progress.Waiting extends com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Progress {
    field public static final com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Progress.Waiting INSTANCE;
  }

  public abstract static sealed class DownloadMediaUiModel.Size {
  }

  public static final class DownloadMediaUiModel.Size.Known extends com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Size {
    ctor public DownloadMediaUiModel.Size.Known(long sizeInBytes);
    method public long component1();
    method public com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Size.Known copy(long sizeInBytes);
    method public long getSizeInBytes();
    property public final long sizeInBytes;
  }

  public static final class DownloadMediaUiModel.Size.Unknown extends com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Size {
    field public static final com.google.android.horologist.media.ui.state.model.DownloadMediaUiModel.Size.Unknown INSTANCE;
  }

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public abstract sealed class MediaUiModel {
  }

  public static final class MediaUiModel.Loading extends com.google.android.horologist.media.ui.state.model.MediaUiModel {
    field public static final com.google.android.horologist.media.ui.state.model.MediaUiModel.Loading INSTANCE;
  }

  public static final class MediaUiModel.Ready extends com.google.android.horologist.media.ui.state.model.MediaUiModel {
    ctor public MediaUiModel.Ready(String id, String title, optional String subtitle, optional String? clientPackageName, optional com.google.android.horologist.images.base.paintable.Paintable? artwork, optional androidx.compose.ui.graphics.Color? artworkColor, optional com.google.android.horologist.images.base.paintable.Paintable? titleIcon);
    method public String component1();
    method public String component2();
    method public String component3();
    method public String? component4();
    method public com.google.android.horologist.images.base.paintable.Paintable? component5();
    method public androidx.compose.ui.graphics.Color? component6-QN2ZGVo();
    method public com.google.android.horologist.images.base.paintable.Paintable? component7();
    method public com.google.android.horologist.media.ui.state.model.MediaUiModel.Ready copy-lMAxDYE(String id, String title, String subtitle, String? clientPackageName, com.google.android.horologist.images.base.paintable.Paintable? artwork, androidx.compose.ui.graphics.Color? artworkColor, com.google.android.horologist.images.base.paintable.Paintable? titleIcon);
    method public com.google.android.horologist.images.base.paintable.Paintable? getArtwork();
    method public androidx.compose.ui.graphics.Color? getArtworkColor();
    method public String? getClientPackageName();
    method public String getId();
    method public String getSubtitle();
    method public String getTitle();
    method public com.google.android.horologist.images.base.paintable.Paintable? getTitleIcon();
    property public final com.google.android.horologist.images.base.paintable.Paintable? artwork;
    property public final androidx.compose.ui.graphics.Color? artworkColor;
    property public final String? clientPackageName;
    property public final String id;
    property public final String subtitle;
    property public final String title;
    property public final com.google.android.horologist.images.base.paintable.Paintable? titleIcon;
  }

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public abstract sealed class PlaylistDownloadUiModel {
    method public com.google.android.horologist.media.ui.state.model.PlaylistUiModel getPlaylistUiModel();
    property public com.google.android.horologist.media.ui.state.model.PlaylistUiModel playlistUiModel;
  }

  public static final class PlaylistDownloadUiModel.Completed extends com.google.android.horologist.media.ui.state.model.PlaylistDownloadUiModel {
    ctor public PlaylistDownloadUiModel.Completed(com.google.android.horologist.media.ui.state.model.PlaylistUiModel playlistUiModel);
    method public com.google.android.horologist.media.ui.state.model.PlaylistUiModel component1();
    method public com.google.android.horologist.media.ui.state.model.PlaylistDownloadUiModel.Completed copy(com.google.android.horologist.media.ui.state.model.PlaylistUiModel playlistUiModel);
    property public com.google.android.horologist.media.ui.state.model.PlaylistUiModel playlistUiModel;
  }

  public static final class PlaylistDownloadUiModel.InProgress extends com.google.android.horologist.media.ui.state.model.PlaylistDownloadUiModel {
    ctor public PlaylistDownloadUiModel.InProgress(com.google.android.horologist.media.ui.state.model.PlaylistUiModel playlistUiModel, int percentage);
    method public com.google.android.horologist.media.ui.state.model.PlaylistUiModel component1();
    method public int component2();
    method public com.google.android.horologist.media.ui.state.model.PlaylistDownloadUiModel.InProgress copy(com.google.android.horologist.media.ui.state.model.PlaylistUiModel playlistUiModel, int percentage);
    method public int getPercentage();
    property public final int percentage;
    property public com.google.android.horologist.media.ui.state.model.PlaylistUiModel playlistUiModel;
  }

  public final class PlaylistUiModel {
    ctor public PlaylistUiModel(String id, String title, optional String? artworkUri);
    method public String component1();
    method public String component2();
    method public String? component3();
    method public com.google.android.horologist.media.ui.state.model.PlaylistUiModel copy(String id, String title, String? artworkUri);
    method public String? getArtworkUri();
    method public String getId();
    method public String getTitle();
    property public final String? artworkUri;
    property public final String id;
    property public final String title;
  }

  @com.google.android.horologist.annotations.ExperimentalHorologistApi public abstract sealed class TrackPositionUiModel {
    method public abstract boolean getShouldAnimate();
    method public abstract boolean getShowProgress();
    method public abstract boolean isLoading();
    property public abstract boolean isLoading;
    property public abstract boolean shouldAnimate;
    property public abstract boolean showProgress;
  }

  public static final class TrackPositionUiModel.Actual extends com.google.android.horologist.media.ui.state.model.TrackPositionUiModel {
    ctor public TrackPositionUiModel.Actual(float percent, long duration, long position, optional boolean shouldAnimate, optional boolean isLoading);
    method public float component1();
    method public long component2-UwyO8pc();
    method public long component3-UwyO8pc();
    method public boolean component4();
    method public boolean component5();
    method public com.google.android.horologist.media.ui.state.model.TrackPositionUiModel.Actual copy-jKevqZI(float percent, long duration, long position, boolean shouldAnimate, boolean isLoading);
    method public long getDuration();
    method public float getPercent();
    method public long getPosition();
    method public boolean getShouldAnimate();
    method public boolean getShowProgress();
    method public boolean isLoading();
    property public final long duration;
    property public boolean isLoading;
    property public final float percent;
    property public final long position;
    property public boolean shouldAnimate;
    property public boolean showProgress;
    field public static final com.google.android.horologist.media.ui.state.model.TrackPositionUiModel.Actual.Companion Companion;
  }

  public static final class TrackPositionUiModel.Actual.Companion {
    method public com.google.android.horologist.media.ui.state.model.TrackPositionUiModel.Actual getZERO();
    property public final com.google.android.horologist.media.ui.state.model.TrackPositionUiModel.Actual ZERO;
  }

  public static final class TrackPositionUiModel.Hidden extends com.google.android.horologist.media.ui.state.model.TrackPositionUiModel {
    method public boolean getShouldAnimate();
    method public boolean getShowProgress();
    method public boolean isLoading();
    property public boolean isLoading;
    property public boolean shouldAnimate;
    property public boolean showProgress;
    field public static final com.google.android.horologist.media.ui.state.model.TrackPositionUiModel.Hidden INSTANCE;
  }

  public static final class TrackPositionUiModel.Loading extends com.google.android.horologist.media.ui.state.model.TrackPositionUiModel {
    ctor public TrackPositionUiModel.Loading(optional boolean shouldAnimate, optional boolean showProgress);
    method public boolean component1();
    method public boolean component2();
    method public com.google.android.horologist.media.ui.state.model.TrackPositionUiModel.Loading copy(boolean shouldAnimate, boolean showProgress);
    method public boolean getShouldAnimate();
    method public boolean getShowProgress();
    method public boolean isLoading();
    property public boolean isLoading;
    property public boolean shouldAnimate;
    property public boolean showProgress;
  }

  public static final class TrackPositionUiModel.Predictive extends com.google.android.horologist.media.ui.state.model.TrackPositionUiModel {
    ctor public TrackPositionUiModel.Predictive(com.google.android.horologist.media.model.PositionPredictor predictor, optional boolean shouldAnimate, optional boolean isLoading);
    method public com.google.android.horologist.media.model.PositionPredictor component1();
    method public boolean component2();
    method public boolean component3();
    method public com.google.android.horologist.media.ui.state.model.TrackPositionUiModel.Predictive copy(com.google.android.horologist.media.model.PositionPredictor predictor, boolean shouldAnimate, boolean isLoading);
    method public com.google.android.horologist.media.model.PositionPredictor getPredictor();
    method public boolean getShouldAnimate();
    method public boolean getShowProgress();
    method public boolean isLoading();
    property public boolean isLoading;
    property public final com.google.android.horologist.media.model.PositionPredictor predictor;
    property public boolean shouldAnimate;
    property public boolean showProgress;
  }

  public static final class TrackPositionUiModel.SeekProjection extends com.google.android.horologist.media.ui.state.model.TrackPositionUiModel {
    ctor public TrackPositionUiModel.SeekProjection(float percent, long duration, long position, optional boolean shouldAnimate);
    method public float component1();
    method public long component2-UwyO8pc();
    method public long component3-UwyO8pc();
    method public boolean component4();
    method public com.google.android.horologist.media.ui.state.model.TrackPositionUiModel.SeekProjection copy-vLdBGDU(float percent, long duration, long position, boolean shouldAnimate);
    method public long getDuration();
    method public float getPercent();
    method public long getPosition();
    method public boolean getShouldAnimate();
    method public boolean getShowProgress();
    method public boolean isLoading();
    property public final long duration;
    property public boolean isLoading;
    property public final float percent;
    property public final long position;
    property public boolean shouldAnimate;
    property public boolean showProgress;
  }

}

