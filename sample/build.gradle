/*
 * Copyright 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.google.android.horologist.sample"
        // Min because of Tiles
        minSdk 26
        targetSdk 30

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            manifestPlaceholders.schemeSuffix = "-debug"
        }
        release {
            isDefault = true

            manifestPlaceholders.schemeSuffix = ""

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig = signingConfigs.getByName("debug")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        compose true
    }

    kotlinOptions {
        jvmTarget = "1.8"
        // Allow for widescale experimental APIs in Alpha libraries we build upon
        freeCompilerArgs += "-opt-in=androidx.wear.compose.material.ExperimentalWearMaterialApi"
        freeCompilerArgs += "-opt-in=com.google.android.horologist.compose.navscaffold.ExperimentalComposeLayoutApi"
        freeCompilerArgs += "-opt-in=com.google.android.horologist.audio.ExperimentalAudioApi"
        freeCompilerArgs += "-opt-in=com.google.android.horologist.audioui.ExperimentalAudioUiApi"
        freeCompilerArgs += "-opt-in=androidx.compose.ui.ExperimentalComposeUiApi"
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
        freeCompilerArgs += "-opt-in=com.google.accompanist.pager.ExperimentalPagerApi"
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.get()
    }
}

dependencies {
    implementation projects.composeLayout
    implementation projects.audio
    implementation projects.audioUi
    implementation projects.tiles

    implementation libs.compose.ui.tooling
    implementation libs.compose.ui.util

    implementation libs.compose.foundation.foundation
    implementation libs.compose.material.iconsext

    implementation libs.wearcompose.material
    implementation libs.wearcompose.foundation
    implementation libs.wearcompose.navigation

    implementation libs.androidx.core
    implementation libs.androidx.fragment
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.androidx.activity.compose
    implementation libs.androidx.wear.tiles

    implementation libs.kotlin.stdlib

    androidTestImplementation libs.compose.ui.test.junit4
    androidTestImplementation libs.espresso.core
    androidTestImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext
    androidTestImplementation libs.androidx.test.ext.ktx
}
